buildscript {
  repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
    classpath "org.grails.plugins:hibernate5:$hibernatePluginVerions"
    classpath "org.grails.plugins:database-migration:$databaseMigrationVersion"
  }
}

apply plugin: "maven-publish"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "war"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"
apply plugin: "asset-pipeline"
apply plugin: "jacoco"

sourceSets {
  main {
    resources {
      srcDir 'grails-app/migrations'
    }
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url "https://repo.grails.org/grails/core" }
  maven { url "https://dl.bintray.com/grails/plugins" }
  maven { url "https://repository.lan.croz.net/repository/releases/" }
  maven { url "https://repository.lan.croz.net/repository/thirdparty/" }
}

dependencyManagement {
  imports {
    mavenBom "org.grails:grails-bom:$grailsVersion"
  }
  applyMavenExclusions false
}

def jasperExcludes = ["xml-apis", "commons-logging", "commons-collections", "jackson-core", "jackson-databind", "jackson-annotations", "stax", "stax-api", "javax.inject", "olap4j", "lucene-core", "lucene-analyzers-common", "lucene-queryparser"]

dependencies {
  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.grails:grails-core"
  compile "org.springframework.boot:spring-boot-starter-tomcat"
  compile "org.grails:grails-dependencies"
  compile "org.grails:grails-web-boot"
  compile "org.grails.plugins:cache"
  compile "org.grails.plugins:scaffolding"
  compile "org.grails.plugins:hibernate5"
  compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"
  compile "org.hibernate:hibernate-core:$hibernateVersion"
  compile "org.hibernate:hibernate-envers:$hibernateVersion"
  compile "org.hibernate:hibernate-validator:$hibernateVersion"
  compile "org.hibernate:hibernate-ehcache:$hibernateVersion"
  compile "net.croz:grich-core:$grichVersion"
  compile "net.croz:grich-registry:$grichVersion"
  compile "net.croz:grich-search:$grichVersion"
  compile "org.grails.plugins:spring-security-core:$springSecurityVersion"
  compile "org.grails.plugins:grails-hibernate-filter:$hibernateFilterVersion"
  compile "org.grails.plugins:mail:$mailPluginVersion"
  compile 'org.grails.plugins:quartz:2.0.12'
  compile "org.apache.chemistry.opencmis:chemistry-opencmis-client-impl:$opencmisVersion"
  compile "com.github.groovy-wslite:groovy-wslite:$wsLiteVersion"
  compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.template.freemarker:$xdocreportVersion"
  compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.document.docx:$xdocreportVersion"
  compile "org.apache.poi:poi:$apachePoiVersion"
  compile "org.apache.poi:poi-ooxml:$apachePoiVersion"
  compile ("net.sf.jasperreports:jasperreports:$jasperReportsVersion") {
    jasperExcludes.each {
      exclude module: it
    }
  }
  compile "net.croz.jasperreports:jasperreports-fonts-arimo:$fontArimoVersion"
  compile 'org.mnode.ical4j:ical4j:1.0.7'
  compile "org.grails.plugins:database-migration:$databaseMigrationVersion"
  compile "org.liquibase:liquibase-core:$liquibaseVersion"
  testCompile "org.grails.plugins:build-test-data:$testDataVersion"
  console "org.grails:grails-console"
  profile "org.grails.profiles:web"
  runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
  runtime "com.h2database:h2"
  testCompile "org.grails:grails-plugin-testing"
  testCompile files("integration-test/resources")
}

bootRun {
  jvmArgs('-Dspring.output.ansi.enabled=always')
  systemProperties = System.properties
}

test {
  systemProperties = System.properties
}

assets {
  minifyJs = true
  minifyCss = true
}

jacocoTestReport {
  executionData = files tasks.withType(Test)*.jacoco*.destinationFile.findAll { it.exists() }
}

// publish war file
publishing.publications {
  mavenJava(MavenPublication) {
    from components.web
  }
}

publishing.repositories {
    maven {
      credentials {
        username nexusUsername
        password nexusPassword
      }
      url nexusUrl
    }
}
